{
  "ast": null,
  "code": "var _jsxFileName = \"/Users/romyalula/IdeaProjects/Goumies/myConstantLearning/Back/Javascript/Building Server-side Rendered React Apps for Beginners/src/fundamentals/Building a server-side rendered digital clock/MyApp/pages/sessions.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport axios from \"axios\";\n\nclass Sessions extends Component {\n  static async getInitialProps() {\n    let promise = axios.get('http://localhost:4000/sessions').then(response => {\n      return {\n        hasErrored: false,\n        sessionData: response.data\n      };\n    }).catch(error => {\n      return {\n        hasErrored: true,\n        message: error.message\n      };\n    });\n    return promise;\n  }\n\n  constructor(props) {\n    super(props);\n    console.log('Session:constructor called');\n    this.state = {\n      hasErrored: props.hasErrored,\n      message: props.message,\n      sessionData: props.sessionData\n    };\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, __jsx(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, this.state.sessionData.map(session => __jsx(\"li\", {\n      key: session.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }\n    }, session.title, \" \", session.id))));\n  }\n\n}\n\nSessions.propTypes = {};\nSessions.defaultProps = {};\nexport default Sessions;",
  "map": {
    "version": 3,
    "sources": [
      "/Users/romyalula/IdeaProjects/Goumies/myConstantLearning/Back/Javascript/Building Server-side Rendered React Apps for Beginners/src/fundamentals/Building a server-side rendered digital clock/MyApp/pages/sessions.js"
    ],
    "names": [
      "React",
      "Component",
      "axios",
      "Sessions",
      "getInitialProps",
      "promise",
      "get",
      "then",
      "response",
      "hasErrored",
      "sessionData",
      "data",
      "catch",
      "error",
      "message",
      "constructor",
      "props",
      "console",
      "log",
      "state",
      "render",
      "map",
      "session",
      "id",
      "title",
      "propTypes",
      "defaultProps"
    ],
    "mappings": ";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAC7B,eAAaG,eAAb,GAA+B;AAC3B,QAAIC,OAAO,GAAGH,KAAK,CAACI,GAAN,CAAU,gCAAV,EACTC,IADS,CACJC,QAAQ,IAAI;AACd,aAAO;AACHC,QAAAA,UAAU,EAAE,KADT;AAEHC,QAAAA,WAAW,EAAEF,QAAQ,CAACG;AAFnB,OAAP;AAIH,KANS,EAOTC,KAPS,CAOHC,KAAK,IAAI;AACZ,aAAO;AACHJ,QAAAA,UAAU,EAAE,IADT;AAEHK,QAAAA,OAAO,EAAED,KAAK,CAACC;AAFZ,OAAP;AAIH,KAZS,CAAd;AAaA,WAAOT,OAAP;AACH;;AAEDU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACA,SAAKC,KAAL,GAAa;AACTV,MAAAA,UAAU,EAAEO,KAAK,CAACP,UADT;AAETK,MAAAA,OAAO,EAAEE,KAAK,CAACF,OAFN;AAGTJ,MAAAA,WAAW,EAAEM,KAAK,CAACN;AAHV,KAAb;AAKH;;AAEDU,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKD,KAAL,CAAWT,WAAX,CAAuBW,GAAvB,CAA2BC,OAAO,IAC/B;AAAI,MAAA,GAAG,EAAEA,OAAO,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,OAAO,CAACE,KADb,OACqBF,OAAO,CAACC,EAD7B,CADH,CADL,CADJ,CADJ;AAUH;;AAvC4B;;AA0CjCpB,QAAQ,CAACsB,SAAT,GAAqB,EAArB;AACAtB,QAAQ,CAACuB,YAAT,GAAwB,EAAxB;AAEA,eAAevB,QAAf",
    "sourcesContent": [
      "import React, {Component} from 'react';\nimport axios from \"axios\";\n\nclass Sessions extends Component {\n    static async getInitialProps() {\n        let promise = axios.get('http://localhost:4000/sessions')\n            .then(response => {\n                return {\n                    hasErrored: false,\n                    sessionData: response.data\n                }\n            })\n            .catch(error => {\n                return {\n                    hasErrored: true,\n                    message: error.message\n                }\n            });\n        return promise;\n    }\n\n    constructor(props) {\n        super(props);\n        console.log('Session:constructor called');\n        this.state = {\n            hasErrored: props.hasErrored,\n            message: props.message,\n            sessionData: props.sessionData\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <ul>\n                    {this.state.sessionData.map(session =>\n                        <li key={session.id}>\n                            {session.title} {session.id}\n                        </li>)}\n                </ul>\n            </div>\n        );\n    }\n}\n\nSessions.propTypes = {};\nSessions.defaultProps = {};\n\nexport default Sessions;"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}