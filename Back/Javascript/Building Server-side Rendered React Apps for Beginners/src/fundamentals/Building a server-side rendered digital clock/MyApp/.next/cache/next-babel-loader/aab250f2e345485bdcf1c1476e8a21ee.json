{
  "ast": null,
  "code": "import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport SpeakerCard from \"../src/SpeakerCard\";\nimport getConfig from 'next/config';\n\nvar _getConfig = getConfig(),\n    serverRuntimeConfig = _getConfig.serverRuntimeConfig,\n    publicRuntimeConfig = _getConfig.publicRuntimeConfig;\n\nvar Speakers = /*#__PURE__*/function (_Component) {\n  _inherits(Speakers, _Component);\n\n  var _super = _createSuper(Speakers);\n\n  _createClass(Speakers, null, [{\n    key: \"GetSpeakersURL\",\n    value: function GetSpeakersURL() {\n      if (false) return process.env.RESTURL_SPEAKERS_PROD || publicRuntimeConfig.RESTURL_SPEAKERS_PROD;\n      return process.env.RESTURL_SPEAKERS_DEV;\n    } // Next framework runs getInitialProps()\n    // before the component construction\n\n  }, {\n    key: \"getInitialProps\",\n    value: function getInitialProps() {\n      var promise;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              promise = axios.get(Speakers.GetSpeakersURL()).then(function (response) {\n                return {\n                  hasErrored: false,\n                  speakerData: response.data\n                };\n              })[\"catch\"](function (error) {\n                return {\n                  hasErrored: true,\n                  message: error.message\n                };\n              });\n              return _context.abrupt(\"return\", promise);\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    } // getInitialProps() returns then\n\n  }]);\n\n  function Speakers(props) {\n    var _this;\n\n    _classCallCheck(this, Speakers);\n\n    _this = _super.call(this, props);\n    console.log('Speakers:constructor called');\n    _this.state = {\n      isLoading: props.isLoading,\n      hasErrored: props.hasErrored,\n      message: props.message,\n      speakerData: props.speakerData\n    };\n    return _this;\n  } // Once a class component is loaded and ready\n\n\n  _createClass(Speakers, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {} // If the component is removed from the page, the timer is cleared\n    // to avoid a memory leak with a 'dangling' timer\n\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(\"div\", {\n        className: \"container\"\n      }, __jsx(\"div\", {\n        className: \"row\"\n      }, __jsx(\"div\", {\n        className: \"card-deck\"\n      }, this.state.speakerData.map(function (speaker) {\n        return __jsx(\"div\", {\n          className: \"card col-4 cardmin margintopbottom20\",\n          key: speaker.id\n        }, __jsx(SpeakerCard, {\n          isLoading: _this2.state.isLoading,\n          speaker: speaker\n        }));\n      }))));\n    }\n  }]);\n\n  return Speakers;\n}(Component);\n\nexport default Speakers;",
  "map": {
    "version": 3,
    "sources": [
      "/Users/romyalula/IdeaProjects/Goumies/myConstantLearning/Back/Javascript/Building Server-side Rendered React Apps for Beginners/src/fundamentals/Building a server-side rendered digital clock/MyApp/pages/speakers.js"
    ],
    "names": [
      "React",
      "Component",
      "axios",
      "SpeakerCard",
      "getConfig",
      "serverRuntimeConfig",
      "publicRuntimeConfig",
      "Speakers",
      "process",
      "env",
      "RESTURL_SPEAKERS_PROD",
      "RESTURL_SPEAKERS_DEV",
      "promise",
      "get",
      "GetSpeakersURL",
      "then",
      "response",
      "hasErrored",
      "speakerData",
      "data",
      "error",
      "message",
      "props",
      "console",
      "log",
      "state",
      "isLoading",
      "map",
      "speaker",
      "id"
    ],
    "mappings": ";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;;iBAEmDA,SAAS,E;IAArDC,mB,cAAAA,mB;IAAqBC,mB,cAAAA,mB;;IAEtBC,Q;;;;;;;qCAEsB;AACpB,iBACI,OAAOC,OAAO,CAACC,GAAR,CAAYC,qBAAZ,IACAJ,mBAAmB,CAACI,qBAD3B;AAEJ,aAAOF,OAAO,CAACC,GAAR,CAAYE,oBAAnB;AACH,K,CAED;AACA;;;;;;;;;;AAEQC,cAAAA,O,GAAUV,KAAK,CAACW,GAAN,CAAUN,QAAQ,CAACO,cAAT,EAAV,EACTC,IADS,CACJ,UAAAC,QAAQ,EAAI;AACd,uBAAO;AACHC,kBAAAA,UAAU,EAAE,KADT;AAEHC,kBAAAA,WAAW,EAAEF,QAAQ,CAACG;AAFnB,iBAAP;AAIH,eANS,WAOH,UAAAC,KAAK,EAAI;AACZ,uBAAO;AACHH,kBAAAA,UAAU,EAAE,IADT;AAEHI,kBAAAA,OAAO,EAAED,KAAK,CAACC;AAFZ,iBAAP;AAIH,eAZS,C;+CAaPT,O;;;;;;;;MAGX;;;;AACA,oBAAYU,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAEJ,KAAK,CAACI,SADR;AAETT,MAAAA,UAAU,EAAEK,KAAK,CAACL,UAFT;AAGTI,MAAAA,OAAO,EAAEC,KAAK,CAACD,OAHN;AAITH,MAAAA,WAAW,EAAEI,KAAK,CAACJ;AAJV,KAAb;AAHe;AASlB,G,CAED;;;;;wCACoB,CACnB,C,CAED;AACA;;;;2CACuB,CACtB;;;6BAEQ;AAAA;;AACL,aACI;AAAK,QAAA,SAAS,EAAC;AAAf,SACI;AAAK,QAAA,SAAS,EAAC;AAAf,SACI;AAAK,QAAA,SAAS,EAAC;AAAf,SACK,KAAKO,KAAL,CAAWP,WAAX,CAAuBS,GAAvB,CAA2B,UAACC,OAAD,EAAa;AACrC,eAAO;AAAK,UAAA,SAAS,EAAC,sCAAf;AAAsD,UAAA,GAAG,EAAEA,OAAO,CAACC;AAAnE,WACH,MAAC,WAAD;AAAa,UAAA,SAAS,EAAE,MAAI,CAACJ,KAAL,CAAWC,SAAnC;AACa,UAAA,OAAO,EAAEE;AADtB,UADG,CAAP;AAIH,OALA,CADL,CADJ,CADJ,CADJ;AAeH;;;;EAjEkB3B,S;;AAoEvB,eAAeM,QAAf",
    "sourcesContent": [
      "import React, {Component} from 'react';\nimport axios from 'axios';\nimport SpeakerCard from \"../src/SpeakerCard\";\n\nimport getConfig from 'next/config';\n\nconst {serverRuntimeConfig, publicRuntimeConfig} = getConfig();\n\nclass Speakers extends Component {\n\n    static GetSpeakersURL() {\n        if (process.env.NODE_ENV === 'production')\n            return process.env.RESTURL_SPEAKERS_PROD\n                || publicRuntimeConfig.RESTURL_SPEAKERS_PROD;\n        return process.env.RESTURL_SPEAKERS_DEV;\n    }\n\n    // Next framework runs getInitialProps()\n    // before the component construction\n    static async getInitialProps() {\n        let promise = axios.get(Speakers.GetSpeakersURL())\n            .then(response => {\n                return {\n                    hasErrored: false,\n                    speakerData: response.data\n                }\n            })\n            .catch(error => {\n                return {\n                    hasErrored: true,\n                    message: error.message\n                }\n            });\n        return promise;\n    }\n\n    // getInitialProps() returns then\n    constructor(props) {\n        super(props);\n        console.log('Speakers:constructor called');\n        this.state = {\n            isLoading: props.isLoading,\n            hasErrored: props.hasErrored,\n            message: props.message,\n            speakerData: props.speakerData\n        }\n    }\n\n    // Once a class component is loaded and ready\n    componentDidMount() {\n    }\n\n    // If the component is removed from the page, the timer is cleared\n    // to avoid a memory leak with a 'dangling' timer\n    componentWillUnmount() {\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"card-deck\">\n                        {this.state.speakerData.map((speaker) => {\n                            return <div className=\"card col-4 cardmin margintopbottom20\" key={speaker.id}>\n                                <SpeakerCard isLoading={this.state.isLoading}\n                                             speaker={speaker}/>\n                            </div>\n                        }\n                        )}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Speakers;"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}