{
  "ast": null,
  "code": "var _jsxFileName = \"/Users/romyalula/IdeaProjects/Goumies/myConstantLearning/Back/Javascript/Building Server-side Rendered React Apps for Beginners/src/fundamentals/Building a server-side rendered digital clock/MyApp/pages/speaker.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport axios from \"axios\";\n\nclass Speaker extends Component {\n  // query = option for URL parameter\n  static async getInitialProps({\n    query\n  }) {\n    var promise = axios.get(`http://localhost:4000/speakers/${query.speakerId}`).then(response => {\n      return {\n        hasErrored: false,\n        speakerDataOne: response.data\n      };\n    }).catch(error => {\n      return {\n        hasErrored: true,\n        message: error.message\n      };\n    });\n    return promise;\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, __jsx(\"h2\", {\n      className: \"margintopbottom20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }\n    }, this.props.speakerDataOne.firstName, \" \", this.props.speakerDataOne.lastName), __jsx(\"p\", {\n      className: \"margintopbottom20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }\n    }, this.props.speakerDataOne.bio)));\n  }\n\n}\n\nSpeaker.propTypes = {};\nSpeaker.defaultProps = {};\nexport default Speaker;",
  "map": {
    "version": 3,
    "sources": [
      "/Users/romyalula/IdeaProjects/Goumies/myConstantLearning/Back/Javascript/Building Server-side Rendered React Apps for Beginners/src/fundamentals/Building a server-side rendered digital clock/MyApp/pages/speaker.js"
    ],
    "names": [
      "React",
      "Component",
      "axios",
      "Speaker",
      "getInitialProps",
      "query",
      "promise",
      "get",
      "speakerId",
      "then",
      "response",
      "hasErrored",
      "speakerDataOne",
      "data",
      "catch",
      "error",
      "message",
      "render",
      "props",
      "firstName",
      "lastName",
      "bio",
      "propTypes",
      "defaultProps"
    ],
    "mappings": ";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AAE5B;AACA,eAAaG,eAAb,CAA6B;AAACC,IAAAA;AAAD,GAA7B,EAAsC;AAClC,QAAIC,OAAO,GACPJ,KAAK,CAACK,GAAN,CAAW,kCAAiCF,KAAK,CAACG,SAAU,EAA5D,EAA+DC,IAA/D,CAAoEC,QAAQ,IAAI;AAC5E,aAAO;AACHC,QAAAA,UAAU,EAAE,KADT;AAEHC,QAAAA,cAAc,EAAEF,QAAQ,CAACG;AAFtB,OAAP;AAIH,KALD,EAKGC,KALH,CAKSC,KAAK,IAAI;AACd,aAAO;AACHJ,QAAAA,UAAU,EAAE,IADT;AAEHK,QAAAA,OAAO,EAAED,KAAK,CAACC;AAFZ,OAAP;AAIH,KAVD,CADJ;AAYA,WAAOV,OAAP;AACH;;AAEDW,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmC,KAAKC,KAAL,CAAWN,cAAX,CAA0BO,SAA7D,OAAyE,KAAKD,KAAL,CAAWN,cAAX,CAA0BQ,QAAnG,CADJ,EAEI;AAAG,MAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkC,KAAKF,KAAL,CAAWN,cAAX,CAA0BS,GAA5D,CAFJ,CADJ,CADJ;AAQH;;AA5B2B;;AA+BhClB,OAAO,CAACmB,SAAR,GAAoB,EAApB;AACAnB,OAAO,CAACoB,YAAR,GAAuB,EAAvB;AAEA,eAAepB,OAAf",
    "sourcesContent": [
      "import React, {Component} from 'react';\nimport axios from \"axios\";\n\nclass Speaker extends Component {\n\n    // query = option for URL parameter\n    static async getInitialProps({query}) {\n        var promise =\n            axios.get(`http://localhost:4000/speakers/${query.speakerId}`).then(response => {\n                return {\n                    hasErrored: false,\n                    speakerDataOne: response.data\n                };\n            }).catch(error => {\n                return {\n                    hasErrored: true,\n                    message: error.message\n                }\n            });\n        return promise;\n    }\n\n    render() {\n        return (\n            <div className='container'>\n                <div className=\"row\">\n                    <h2 className='margintopbottom20'>{this.props.speakerDataOne.firstName} {this.props.speakerDataOne.lastName}</h2>\n                    <p className='margintopbottom20'>{this.props.speakerDataOne.bio}</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nSpeaker.propTypes = {};\nSpeaker.defaultProps = {};\n\nexport default Speaker;\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}