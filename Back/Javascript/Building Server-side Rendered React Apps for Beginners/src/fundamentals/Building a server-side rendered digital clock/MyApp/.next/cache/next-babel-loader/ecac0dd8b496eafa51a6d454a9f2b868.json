{
  "ast": null,
  "code": "var _jsxFileName = \"/Users/romyalula/IdeaProjects/Goumies/myConstantLearning/Back/Javascript/Building Server-side Rendered React Apps for Beginners/src/fundamentals/Using JSX files and Next.js as build system/MyApp/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport react from 'react';\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: new Date().toLocaleString()\n    };\n  }\n\n  tick() {\n    // replacing with new state\n    this.setState(() => {\n      return {\n        time: new Date().toLocaleString()\n      };\n    });\n  } // Once a class component is loaded and ready\n\n\n  componentDidMount() {\n    this.interval = setInterval(() => this.tick(), 1000);\n  } // If the component is removed from the page, the timer is cleared\n  // to avoid a memory leak with a 'dangling' timer\n\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    return __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 16\n      }\n    }, \"Hello World on the :\", this.state.time);\n  }\n\n}\n\nexport default Index;",
  "map": {
    "version": 3,
    "sources": [
      "/Users/romyalula/IdeaProjects/Goumies/myConstantLearning/Back/Javascript/Building Server-side Rendered React Apps for Beginners/src/fundamentals/Using JSX files and Next.js as build system/MyApp/pages/index.js"
    ],
    "names": [
      "react",
      "Index",
      "React",
      "Component",
      "constructor",
      "props",
      "state",
      "time",
      "Date",
      "toLocaleString",
      "tick",
      "setState",
      "componentDidMount",
      "interval",
      "setInterval",
      "componentWillUnmount",
      "clearInterval",
      "render"
    ],
    "mappings": ";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,KAAN,SAAoBC,KAAK,CAACC,SAA1B,CAAoC;AAEhCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,cAAX;AADG,KAAb;AAGH;;AAEDC,EAAAA,IAAI,GAAG;AACH;AACA,SAAKC,QAAL,CAAc,MAAM;AAChB,aAAQ;AACJJ,QAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,cAAX;AADF,OAAR;AAGH,KAJD;AAKH,GAhB+B,CAkBhC;;;AACAG,EAAAA,iBAAiB,GAAE;AACf,SAAKC,QAAL,GAAgBC,WAAW,CAAC,MAAM,KAAKJ,IAAL,EAAP,EAAoB,IAApB,CAA3B;AACH,GArB+B,CAuBhC;AACA;;;AACAK,EAAAA,oBAAoB,GAAG;AACnBC,IAAAA,aAAa,CAAC,KAAKH,QAAN,CAAb;AACH;;AAEDI,EAAAA,MAAM,GAAG;AACL,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACF,KAAKX,KAAL,CAAWC,IADT,CAAP;AAEH;;AAhC+B;;AAmCpC,eAAeN,KAAf",
    "sourcesContent": [
      "import react from 'react';\n\nclass Index extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            time: new Date().toLocaleString()\n        }\n    }\n\n    tick() {\n        // replacing with new state\n        this.setState(() => {\n            return ({\n                time: new Date().toLocaleString()\n            })\n        })\n    }\n\n    // Once a class component is loaded and ready\n    componentDidMount(){\n        this.interval = setInterval(() => this.tick(), 1000);\n    }\n\n    // If the component is removed from the page, the timer is cleared\n    // to avoid a memory leak with a 'dangling' timer\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    render() {\n        return <h1>Hello World on the :\n            {this.state.time}</h1>\n    }\n}\n\nexport default Index;"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}