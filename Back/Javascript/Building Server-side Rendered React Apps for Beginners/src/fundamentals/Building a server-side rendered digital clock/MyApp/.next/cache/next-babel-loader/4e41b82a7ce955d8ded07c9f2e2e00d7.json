{
  "ast": null,
  "code": "import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Link from 'next/link';\nimport ReactPlaceholder from \"react-placeholder\";\nimport \"react-placeholder/lib/reactPlaceholder.css\";\nimport { TextBlock, MediaBlock, TextRow, RectShape, RoundShape } from \"react-placeholder/lib/placeholders\";\n\nvar SpeakerCard = /*#__PURE__*/function (_Component) {\n  _inherits(SpeakerCard, _Component);\n\n  var _super = _createSuper(SpeakerCard);\n\n  function SpeakerCard() {\n    _classCallCheck(this, SpeakerCard);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SpeakerCard, [{\n    key: \"render\",\n    value: function render() {\n      var awesomePlaceholder1 = __jsx(MediaBlock, {\n        color: \"#E0E0E0\",\n        rows: 6\n      });\n\n      return __jsx(ReactPlaceholder, {\n        showLoadingAnimation: true,\n        delay: 0,\n        ready: !this.props.isLoading,\n        customPlaceholder: awesomePlaceholder1\n      }, __jsx(\"img\", {\n        className: \"card-img-top\",\n        src: \"/speakers/Speaker-\".concat(this.props.speaker.id, \".jpg\")\n      }), __jsx(\"div\", {\n        className: \"card-body\"\n      }, __jsx(Link, {\n        href: {\n          pathname: '/speaker',\n          query: {\n            speakerId: this.props.speaker.id\n          }\n        },\n        as: \"speaker/\".concat(this.props.speaker.id)\n      }, __jsx(\"a\", {\n        className: \"btn btn-lg btn-block btn-outline-primary\"\n      }, \"Details\")), __jsx(\"h4\", {\n        className: \"card-title\"\n      }, this.props.speaker.userFirstName, \" \", this.props.speaker.userLastName, \" \"), __jsx(\"p\", {\n        className: \"card-text\"\n      }, this.props.speaker.bioShort)));\n    }\n  }]);\n\n  return SpeakerCard;\n}(Component);\n\nexport default SpeakerCard;",
  "map": {
    "version": 3,
    "sources": [
      "/Users/romyalula/IdeaProjects/Goumies/myConstantLearning/Back/Javascript/Building Server-side Rendered React Apps for Beginners/src/fundamentals/Building a server-side rendered digital clock/MyApp/src/SpeakerCard.js"
    ],
    "names": [
      "React",
      "Component",
      "Link",
      "ReactPlaceholder",
      "TextBlock",
      "MediaBlock",
      "TextRow",
      "RectShape",
      "RoundShape",
      "SpeakerCard",
      "awesomePlaceholder1",
      "props",
      "isLoading",
      "speaker",
      "id",
      "pathname",
      "query",
      "speakerId",
      "userFirstName",
      "userLastName",
      "bioShort"
    ],
    "mappings": ";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,gBAAP,MAA6B,mBAA7B;AACA,OAAO,4CAAP;AACA,SACIC,SADJ,EAEIC,UAFJ,EAGIC,OAHJ,EAIIC,SAJJ,EAKIC,UALJ,QAMO,oCANP;;IAQMC,W;;;;;;;;;;;;;6BACO;AACL,UAAMC,mBAAmB,GAAG,MAAC,UAAD;AAAY,QAAA,KAAK,EAAC,SAAlB;AAA4B,QAAA,IAAI,EAAE;AAAlC,QAA5B;;AACA,aACI,MAAC,gBAAD;AACI,QAAA,oBAAoB,MADxB;AAEI,QAAA,KAAK,EAAE,CAFX;AAGI,QAAA,KAAK,EAAE,CAAC,KAAKC,KAAL,CAAWC,SAHvB;AAII,QAAA,iBAAiB,EAAEF;AAJvB,SAMI;AAAK,QAAA,SAAS,EAAC,cAAf;AAA8B,QAAA,GAAG,8BAAuB,KAAKC,KAAL,CAAWE,OAAX,CAAmBC,EAA1C;AAAjC,QANJ,EAOI;AAAK,QAAA,SAAS,EAAC;AAAf,SACI,MAAC,IAAD;AACI,QAAA,IAAI,EAAE;AACFC,UAAAA,QAAQ,EAAE,UADR;AACoBC,UAAAA,KAAK,EACvB;AACIC,YAAAA,SAAS,EAAE,KAAKN,KAAL,CAAWE,OAAX,CAAmBC;AADlC;AAFF,SADV;AAOI,QAAA,EAAE,oBAAa,KAAKH,KAAL,CAAWE,OAAX,CAAmBC,EAAhC;AAPN,SAQI;AAAG,QAAA,SAAS,EAAC;AAAb,mBARJ,CADJ,EAaI;AAAI,QAAA,SAAS,EAAC;AAAd,SAA4B,KAAKH,KAAL,CAAWE,OAAX,CAAmBK,aAA/C,OAA+D,KAAKP,KAAL,CAAWE,OAAX,CAAmBM,YAAlF,MAbJ,EAcI;AAAG,QAAA,SAAS,EAAC;AAAb,SAA0B,KAAKR,KAAL,CAAWE,OAAX,CAAmBO,QAA7C,CAdJ,CAPJ,CADJ;AA0BH;;;;EA7BqBnB,S;;AAgC1B,eAAeQ,WAAf",
    "sourcesContent": [
      "import React, {Component} from \"react\";\nimport Link from 'next/link';\nimport ReactPlaceholder from \"react-placeholder\";\nimport \"react-placeholder/lib/reactPlaceholder.css\";\nimport {\n    TextBlock,\n    MediaBlock,\n    TextRow,\n    RectShape,\n    RoundShape\n} from \"react-placeholder/lib/placeholders\";\n\nclass SpeakerCard extends Component {\n    render() {\n        const awesomePlaceholder1 = <MediaBlock color=\"#E0E0E0\" rows={6} />;\n        return (\n            <ReactPlaceholder\n                showLoadingAnimation\n                delay={0}\n                ready={!this.props.isLoading}\n                customPlaceholder={awesomePlaceholder1}\n            >\n                <img className=\"card-img-top\" src={`/speakers/Speaker-${this.props.speaker.id}.jpg`}/>\n                <div className=\"card-body\">\n                    <Link\n                        href={{\n                            pathname: '/speaker', query:\n                                {\n                                    speakerId: this.props.speaker.id\n                                }\n                        }}\n                        as={`speaker/${this.props.speaker.id}`}>\n                        <a className=\"btn btn-lg btn-block btn-outline-primary\">\n                            Details\n                        </a>\n                    </Link>\n                    <h4 className=\"card-title\">{this.props.speaker.userFirstName} {this.props.speaker.userLastName} </h4>\n                    <p className=\"card-text\">{this.props.speaker.bioShort}</p>\n                </div>\n            </ReactPlaceholder>\n        );\n    }\n}\n\nexport default SpeakerCard;"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}